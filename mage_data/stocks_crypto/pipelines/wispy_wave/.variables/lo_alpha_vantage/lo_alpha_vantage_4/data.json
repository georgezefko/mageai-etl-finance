"{\"data\": [\"\\u001b[0;31m---------------------------------------------------------------------------\\u001b[0m\", \"\\u001b[0;31mTypeError\\u001b[0m                                 Traceback (most recent call last)\", \"\\u001b[0;32m/tmp/ipykernel_30/2070181834.py\\u001b[0m in \\u001b[0;36m<cell line: 93>\\u001b[0;34m()\\u001b[0m\\n\\u001b[1;32m     91\\u001b[0m         \\u001b[0;32mreturn\\u001b[0m \\u001b[0mfind\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0;32mlambda\\u001b[0m \\u001b[0mval\\u001b[0m\\u001b[0;34m:\\u001b[0m \\u001b[0mval\\u001b[0m \\u001b[0;32mis\\u001b[0m \\u001b[0;32mnot\\u001b[0m \\u001b[0;32mNone\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0moutput\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m     92\\u001b[0m \\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m---> 93\\u001b[0;31m \\u001b[0mdf\\u001b[0m \\u001b[0;34m=\\u001b[0m \\u001b[0mexecute_custom_code\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0m\\u001b[1;32m     94\\u001b[0m \\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m     95\\u001b[0m \\u001b[0;31m# Post processing code below (source: output_display.py)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\", \"\\u001b[0;32m/tmp/ipykernel_30/2070181834.py\\u001b[0m in \\u001b[0;36mexecute_custom_code\\u001b[0;34m()\\u001b[0m\\n\\u001b[1;32m     78\\u001b[0m     )\\n\\u001b[1;32m     79\\u001b[0m     \\u001b[0;32mif\\u001b[0m \\u001b[0;32mTrue\\u001b[0m\\u001b[0;34m:\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m---> 80\\u001b[0;31m         block.run_tests(\\n\\u001b[0m\\u001b[1;32m     81\\u001b[0m             \\u001b[0mcustom_code\\u001b[0m\\u001b[0;34m=\\u001b[0m\\u001b[0mcode\\u001b[0m\\u001b[0;34m,\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m     82\\u001b[0m             \\u001b[0mglobal_vars\\u001b[0m\\u001b[0;34m=\\u001b[0m\\u001b[0mglobal_vars\\u001b[0m\\u001b[0;34m,\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\", \"\\u001b[0;32m/usr/local/lib/python3.10/site-packages/mage_ai/data_preparation/models/block/__init__.py\\u001b[0m in \\u001b[0;36mrun_tests\\u001b[0;34m(self, build_block_output_stdout, custom_code, execution_partition, global_vars, logger, logging_tags, update_tests, dynamic_block_uuid, from_notebook)\\u001b[0m\\n\\u001b[1;32m   1587\\u001b[0m                         \\u001b[0mfunc\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0;34m*\\u001b[0m\\u001b[0moutputs\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0;34m**\\u001b[0m\\u001b[0mglobal_vars\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m   1588\\u001b[0m                     \\u001b[0;32melse\\u001b[0m\\u001b[0;34m:\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m-> 1589\\u001b[0;31m                         \\u001b[0mfunc\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0;34m*\\u001b[0m\\u001b[0moutputs\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0m\\u001b[1;32m   1590\\u001b[0m                     \\u001b[0mtests_passed\\u001b[0m \\u001b[0;34m+=\\u001b[0m \\u001b[0;36m1\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m   1591\\u001b[0m                 \\u001b[0;32mexcept\\u001b[0m \\u001b[0mAssertionError\\u001b[0m \\u001b[0;32mas\\u001b[0m \\u001b[0merr\\u001b[0m\\u001b[0;34m:\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\", \"\\u001b[0;31mTypeError\\u001b[0m: test_output() missing 1 required positional argument: 'output'\"], \"error\": [\"\\u001b[0;31m---------------------------------------------------------------------------\\u001b[0m\", \"\\u001b[0;31mTypeError\\u001b[0m                                 Traceback (most recent call last)\", \"\\u001b[0;32m/tmp/ipykernel_30/2070181834.py\\u001b[0m in \\u001b[0;36m<cell line: 93>\\u001b[0;34m()\\u001b[0m\\n\\u001b[1;32m     91\\u001b[0m         \\u001b[0;32mreturn\\u001b[0m \\u001b[0mfind\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0;32mlambda\\u001b[0m \\u001b[0mval\\u001b[0m\\u001b[0;34m:\\u001b[0m \\u001b[0mval\\u001b[0m \\u001b[0;32mis\\u001b[0m \\u001b[0;32mnot\\u001b[0m \\u001b[0;32mNone\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0moutput\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m     92\\u001b[0m \\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m---> 93\\u001b[0;31m \\u001b[0mdf\\u001b[0m \\u001b[0;34m=\\u001b[0m \\u001b[0mexecute_custom_code\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0m\\u001b[1;32m     94\\u001b[0m \\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m     95\\u001b[0m \\u001b[0;31m# Post processing code below (source: output_display.py)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\", \"\\u001b[0;32m/tmp/ipykernel_30/2070181834.py\\u001b[0m in \\u001b[0;36mexecute_custom_code\\u001b[0;34m()\\u001b[0m\\n\\u001b[1;32m     78\\u001b[0m     )\\n\\u001b[1;32m     79\\u001b[0m     \\u001b[0;32mif\\u001b[0m \\u001b[0;32mTrue\\u001b[0m\\u001b[0;34m:\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m---> 80\\u001b[0;31m         block.run_tests(\\n\\u001b[0m\\u001b[1;32m     81\\u001b[0m             \\u001b[0mcustom_code\\u001b[0m\\u001b[0;34m=\\u001b[0m\\u001b[0mcode\\u001b[0m\\u001b[0;34m,\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m     82\\u001b[0m             \\u001b[0mglobal_vars\\u001b[0m\\u001b[0;34m=\\u001b[0m\\u001b[0mglobal_vars\\u001b[0m\\u001b[0;34m,\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\", \"\\u001b[0;32m/usr/local/lib/python3.10/site-packages/mage_ai/data_preparation/models/block/__init__.py\\u001b[0m in \\u001b[0;36mrun_tests\\u001b[0;34m(self, build_block_output_stdout, custom_code, execution_partition, global_vars, logger, logging_tags, update_tests, dynamic_block_uuid, from_notebook)\\u001b[0m\\n\\u001b[1;32m   1587\\u001b[0m                         \\u001b[0mfunc\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0;34m*\\u001b[0m\\u001b[0moutputs\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0;34m**\\u001b[0m\\u001b[0mglobal_vars\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m   1588\\u001b[0m                     \\u001b[0;32melse\\u001b[0m\\u001b[0;34m:\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m-> 1589\\u001b[0;31m                         \\u001b[0mfunc\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0;34m*\\u001b[0m\\u001b[0moutputs\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0m\\u001b[1;32m   1590\\u001b[0m                     \\u001b[0mtests_passed\\u001b[0m \\u001b[0;34m+=\\u001b[0m \\u001b[0;36m1\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m   1591\\u001b[0m                 \\u001b[0;32mexcept\\u001b[0m \\u001b[0mAssertionError\\u001b[0m \\u001b[0;32mas\\u001b[0m \\u001b[0merr\\u001b[0m\\u001b[0;34m:\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\", \"\\u001b[0;31mTypeError\\u001b[0m: test_output() missing 1 required positional argument: 'output'\"], \"execution_state\": null, \"metadata\": null, \"msg_id\": \"c485b339-fa161c657233bf9433a43131_7_9\", \"msg_type\": \"error\", \"type\": \"text\", \"block_type\": \"data_loader\", \"pipeline_uuid\": null, \"uuid\": \"lo_alpha_vantage\"}"